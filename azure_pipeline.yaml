trigger:
  - dev
  - master

pool: 
  vmImage: 'ubuntu-latest'
      
variables:
  serviceConnection: sc-acr # Service connection to Azure Container Registry (ACR)
  # ACR repositories
  repository_dev: spring-boot-app/dev
  repository_prod: spring-boot-app/prod
  defaultTag: latest

stages:
  - stage: DEV_BUILD_PUSH_AND_PUBLISH_ARTIFACT
    condition: eq(variables['Build.SourceBranchName'],'dev')

    jobs:
      - job: INSTALL_DEPENDENCIES_DEV
        displayName: "Login, Build, Push, Logout"

        steps:
          - task: Maven@3
            displayName: 'Maven install'
            inputs:
              mavenPomFile: 'pom.xml'
              mavenOptions: '-Xmx3072m'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.8'
              jdkArchitectureOption: 'x64'
              publishJUnitResults: true
              testResultsFiles: '**/TEST-*.xml'
              goals: 'package'

          - task: Docker@2
            displayName: Login to ACR
            inputs:
              command: login
              containerRegistry: $(serviceConnection)

          - task: Docker@2
            displayName: Docker Build and Push DEV $(Build.BuildId)
            inputs:
              command: buildAndPush
              repository: $(repository_dev)
              Dockerfile: Dockerfile
              tags: |
                $(defaultTag)
                $(Build.BuildId)

          - task: Docker@2
            displayName: Logout of ACR
            inputs:
              command: logout
              containerRegistry: $(serviceConnection)

  - stage: PROD_BUILD_PUSH_AND_PUBLISH_ARTIFACT
    condition: eq(variables['Build.SourceBranchName'],'master')
    
    jobs:
      - job: INSTALL_DEPENDENCIES_PROD
        displayName: "Login, Build, Push, Logout"

        steps:
          - task: Maven@3
            displayName: 'Maven install'
            inputs:
              mavenPomFile: 'pom.xml'
              mavenOptions: '-Xmx3072m'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.8'
              jdkArchitectureOption: 'x64'
              publishJUnitResults: true
              testResultsFiles: '**/TEST-*.xml'
              goals: 'package'

          - task: Docker@2
            displayName: Login to ACR
            inputs:
              command: login
              containerRegistry: $(serviceConnection)

          - task: Docker@2
            displayName: Docker Build and Push PROD $(Build.BuildId)
            inputs:
              command: buildAndPush
              repository: $(repository_prod)
              Dockerfile: Dockerfile
              tags: |
                $(defaultTag)
                $(Build.BuildId)

          - task: Docker@2
            displayName: Logout of ACR
            inputs:
              command: logout
              containerRegistry: $(serviceConnection)
          
          - task: CopyFiles@2
            displayName: "Copy Files to: $(Build.ArtifactStagingDirectory)"
            inputs:
              Contents: "**/IaC/**"
              TargetFolder: $(Build.ArtifactStagingDirectory)
          
          # Optional: Could be used on release to deploy on Kubernetes Cluster
          - task: CopyFiles@2
            displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
            inputs:
              Contents: '**/kubernetes/**'
              TargetFolder: $(Build.ArtifactStagingDirectory)

          - task: PublishBuildArtifacts@1
            displayName: "Publish Artifact: deploy"
            inputs:
              ArtifactName: deploy
 